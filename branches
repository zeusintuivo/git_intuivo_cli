#!/bin/bash
# @author Zeus Intuivo <zeus@intuivo.com>
#

#git branch --remote;


# Shows branches with descriptions
function gb() {
  branches=$(git for-each-ref --format='%(refname)' refs/heads/ | sed 's|refs/heads/||')
  for branch in $branches; do
    desc=$(git config branch.$branch.description)
    if [ $branch == $(git rev-parse --abbrev-ref HEAD) ]; then
      branch="* \033[0m\033[38;5;220m$branch\033[0m"
     else
       branch="  $branch"
     fi
     echo -e "$branch \033[0;36m$desc\033[0m"
  done
}

# Shows branches with descriptions
function gbr() {
  branches=$(git branch --remote)
  for branch in $branches; do
    desc=$(git config branch.$branch.description)
    if [ $branch == $(git rev-parse --abbrev-ref HEAD) ]; then
      branch="* \033[0m\033[38;5;220m$branch\033[0m"
     else
       branch="  $branch"
     fi
     echo -e "\033[38;5;58m$branch  \033[0;36m$desc\033[0m"
  done
}

# Given first argument
if [ ! -z "$1" ] ; then
	{
		if [[ "$1" == "-r" ]] ; then
			{
				echo "REMOTE"
				gbr
			}
		fi
		if [[ "$1" == "-l" ]] ; then
			{
				echo "LOCAL"
				gb
			}
		fi
		exit 0;
	}
fi
#Given second argument
if [ ! -z "$2" ] ; then
	{
		if [[ "$2" == "-r" ]] ; then
			{
				echo "REMOTE"
				gbr
			}
		fi
		if [[ "$2" == "-l" ]] ; then
			{
				echo "LOCAL"
				gb
			}
		fi
		exit 0;
	}
fi
echo "REMOTE"
				gbr
echo "LOCAL"
				gb
