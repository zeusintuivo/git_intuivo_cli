#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
# @action
#
#set -u

function load_colors() {
  [[ -z "${CYAN:-}" ]] && CYAN="\\033[38;5;123m"
  [[ -z "${PURPLE_BLUE:-}" ]] && PURPLE_BLUE="\\033[38;5;93m"
  [[ -z "${YELLOW226:-}" ]] && YELLOW226="\\033[38;5;226m"
  [[ -z "${GRAY241:-}" ]] && GRAY241="\\033[38;5;241m"
  [[ -z "${GRAY242:-}" ]] && GRAY242="\\033[38;5;242m"
  [[ -z "${GRAY243:-}" ]] && GRAY243="\\033[38;5;243m"
  [[ -z "${YELLOW214:-}" ]] && YELLOW214="\\033[38;5;214m"
  [[ -z "${RESET:-}" ]] && RESET="\\033[0m"
  [[ -z "${RED:-}" ]] && RED="\\033[38;5;1m"
  [[ -z "${BRIGHT_BLUE87:-}" ]] && BRIGHT_BLUE87="\\033[38;5;87m"
  GRAYEDOUT="\033[01;30m"
  RED="\033[01;31m"
  GREEN="\033[01;32m"
  YELLOW="\033[01;33m"
  DARKBLUE="\033[01;34m"
  DARKGREEN="\033[38;5;22m"
  PURPLE="\033[01;35m"
  CYAN="\033[01;36m"
  WHITEBOLD="\033[01;37m"

  LIGHTGREEN="\033[38;5;83m"
  LIGHTPINK="\033[1;204m"
  LIGHTYELLOW="\033[38;5;227m"
  GREEN_OVER_DARKBLUE="\033[38;5;76m\033[48;5;17m"
  YELLOW_OVER_DARKBLUE="\033[38;5;220m\033[48;5;20m"
  DARKBLUE_OVER_DARKBLUE="\033[01;34m\033[48;5;20m"

  RESET="\033[0m"
} # end load_colors
load_colors

# check to see if I used a message, then it will behave as a put
#bash shell script check input argument

# set working directory as the scripts location during the execution of script
# cd "$(dirname "$0")"

sshswitchkey_and_commit_here() {

[[ -z "${GIT_USER_NAME:-}" ]] && GIT_USER_NAME=$(command git config --get user.name 2> /dev/null)
#echo "GIT_USER_NAME=$GIT_USER_NAME"
#KEY?
    if [[ "${PWD}" == *"clis"* ]] ; then
    {
      echo -e "${GRAY242} === ${GRAYEDOUT} "We are in clis" ${GRAY242} === ${RESET}"
      if [[ "${GIT_USER_NAME}" != *"zeusintuivo"* ]] ; then
        sshswitchkey zeus ;
        GIT_USER_NAME=$(command git config --get user.name 2> /dev/null)
      fi
      put "${ACTION}" "$*" ;
    }
    else
    {
      LOAD_TEMP_KEYS="# Empty script"
      if [ -f .temp_keys ] ; then
      {
        LOAD_TEMP_KEYS=$(<.temp_keys)
        eval "${LOAD_TEMP_KEYS}"
        if [[ -n "${SSH_KEY:-}" ]] && [[ "${GITUSER:-}" != "${GIT_USER_NAME}" ]] ; then
        {
          echo -e "${RED} === ${GRAYEDOUT} required GITUSER:${GRAY241}${GITUSER:-} ${GRAY242}=?= ${GRAY243}${GIT_USER_NAME}${GRAYEDOUT}:GIT_USER_NAME ${RED} === ${RESET}"
          sshswitchkey "${SSH_KEY}"
          GIT_USER_NAME=$(command git config --get user.name 2> /dev/null)
        }
        fi
        # If the ..temp file provides for  JOURNAL_PUT_COMMIT_METHOD then use it otherwise default to commit action
        #Extra commit
        if [[ ! -z "${JOURNAL_PUT_COMMIT_METHOD}" ]]; then
        {
          if [[ "${JOURNAL_PUT_COMMIT_METHOD}" == "put" || "${JOURNAL_PUT_COMMIT_METHOD}" == "commit" ]] ; then
          {
            "${JOURNAL_PUT_COMMIT_METHOD}" "$*" ;
          }
          else
          {
            echo "  - It appears that file .temp_keys is corrupted. I am expecting …put^ or …commit^"
            echo "    as values. I have received :"${JOURNAL_PUT_COMMIT_METHOD}":  - "
            echo "    Attemping execution anyways "
            "${JOURNAL_PUT_COMMIT_METHOD}" "$*" ;
          }
          fi
        }
        else
        {
          commit "${ACTION}" "$*" ;
        }
        fi
      }
      else
      {
        commit "${ACTION}" "$*" ;   # this is the default action if the file .temp_keys does not exists
      }
      fi
    }
    fi


} # end sshswitchkey_and_commit_here

export ACTION=`basename "$0"`

# check operation systems

  if [[ "$(uname)" == "Darwin" ]] ; then
    # Do something under Mac OS X platform
    #put "${ACTION} $*" ;
    sshswitchkey_and_commit_here "$*"

  elif [[ "$(cut -c1-5 <<< "$(uname -s)")" == "Linux" ]] ; then
    # Do something under GNU/Linux platform
    #put "${ACTION} $*" ;
    sshswitchkey_and_commit_here "$*"

  elif [[ "$(cut -c1-10 <<< "$(uname -s)")" == "MINGW32_NT" ]] ; then
    # Do something under Windows NT platform
    # nothing here
    #put "${ACTION} $*" ;
    sshswitchkey_and_commit_here "$*"

  elif [[ "$(cut -c1-10 <<< "$(uname -s)")" == "MINGW64_NT" ]] ; then
    # Do something under Windows NT platform
    # nothing here
    #put "${ACTION} $*" ;
    sshswitchkey_and_commit_here "$*"


  fi

