#!/usr/bin/env bash

._dirs() {
    find * -maxdepth 0 -type d   # mac and linux tested
} # end ._dirs

._replace_all(){
  local found
  local one_item="${1}"
  local one_action="${2}"
  while :  # replace all {#} to $one_item value
  do
    one_action="${one_action/\{\#\}/$one_item}"  # replace value inside string substitution expresion bash
    found=$(echo -n "${one_action}" | grep "{#}")
    [ $? -eq 1 ] &&  break
  done
  echo "${one_action}"
} # end ._replace_all

# DEBUG=1
# REMOVECACHE=1
.pullsubdirs() {
  # Perform all actions in
  #        LIST1
  #          for each element in
  #                           LIST2

  local _curdir="${1}"
  local _subdir=""
  local local_actions="${2}"
  if [[ "${_curdir}" == "journals" ]] ; then
  {
    echo \". . .skip: ${_curdir} \"
    return
  }
  fi
  if [[ ! -d "${_curdir}" ]] ; then
  {
    echo \". . .does not exist: ${_curdir} \"
    return
  }
  fi
  cd "${_curdir}"
  local local_items="$(._dirs)"
  local one_item
  local one_action
  local action
  # local _subdirs
  local _actions
  local _cwd="$(pwd)"
  # local subdir_out=""
  while read -r one_item; do
  {
    [[ -z "${one_item}" ]] && continue  # if zempty skip
    action="$(._replace_all "${one_item}" "${local_actions}")"
    # echo "${action}"
    eval "${action}"
    _subdir="${_cwd}/${one_item}"
    cd "${_subdir}"
    # pwd
    [[ -d .git/ ]] && pull
    [[ -d .git/ ]] && continue  # same as if [[ ! -d .git/ ]] ; then
    _actions="echo -e \".\"
    echo \" \"
    echo \"Subdirectory:\"
    echo \". \"
    echo \". . . . . . .       {#} \"
    cd \"${_subdir}/{#}\"
    "
    # subdir_out="$(
      .pullsubdirs "${_subdir}" "${_actions}" &
      # )"
    # echo "${subdir_out}"
  }
  done <<< "${local_items}"
} # end .pullsubdirs


CURDIR="${PWD}"
ACTIONS="echo -e \".\"
echo \" \"
echo \"Directory:\"
echo \". \"
echo \". . . . . . .       {#} \"
cd \"${CURDIR}/{#}\"
pwd
[[ -d .git/ ]] && pull
"

.pullsubdirs  "${CURDIR}" "${ACTIONS}" &


