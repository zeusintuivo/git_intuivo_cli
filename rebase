#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
# set -u
#colors
[[ -z "${CYAN:-}" ]] && CYAN="\\033[38;5;123m"
[[ -z "${PURPLE_BLUE:-}" ]] && PURPLE_BLUE="\\033[38;5;93m"
[[ -z "${GRAY241:-}" ]] && GRAY241="\\033[38;5;241m"
[[ -z "${YELLOW226:-}" ]] && YELLOW226="\\033[38;5;226m"
[[ -z "${YELLOW214:-}" ]] && YELLOW214="\\033[38;5;214m"
[[ -z "${RESET:-}" ]] && RESET="\\033[0m"
[[ -z "${RED:-}" ]] && RED="\\033[38;5;1m"
[[ -z "${BRIGHT_BLUE87:-}" ]] && BRIGHT_BLUE87="\\033[38;5;87m"

[[ -z "${GIT_USER_NAME:-}" ]] && GIT_USER_NAME=$(command git config --get user.name 2> /dev/null)



#KEY?
    if [[ "${PWD:-}" == *"clis"* ]] ; then
      if [[ "${GIT_USER_NAME:-}" != *"zeusintuivo"* ]] ; then
        sshswitchkey zeus ;
        GIT_USER_NAME=$(command git config --get user.name 2> /dev/null)
      fi
    else
      LOAD_TEMP_KEYS="# Empty script"
      if [ -f .temp_keys ] ; then
        LOAD_TEMP_KEYS=$(<.temp_keys)
        eval "${LOAD_TEMP_KEYS}"
        if [[ ! -z "${SSH_KEY:-}" ]] && [[ "${GITUSER}" != "${GIT_USER_NAME}" ]] ; then
          sshswitchkey "${SSH_KEY}"
          GIT_USER_NAME=$(command git config --get user.name 2> /dev/null)
        fi
      fi
    fi
#
# C H E C K   H O W   C O M P U T E R   H A N D L E S   E R R O R S   --Start
#
test_positives(){
  touch /tmp/WERWERWERWERWERWERWERWERWERWERWERR
  local KIND=""
  ls /tmp/werwerwerwerwerwerwerwerwerwerwerr >/dev/null 2>&1;
  if (( $? == 0 )) ;  then  # Intel processor
    KIND="INTEL"
  fi
  ls /tmp/werwerwerwerwerwerwerwerwerwerwerr >/dev/null 2>&1;
  if [ $? == 0 ]; then   # Mac Intel processor
    KIND="${KIND}MAC"
  fi
  echo "${KIND}"
  return 0
}
PROCESSOR_ERROR=$(test_positives)
# DEBUG MACPOSITIVE MACPOSITIVE echo "${MACPOSITIVE}"
# DEBUG MACPOSITIVE exit 1
#
# C H E C K   H O W   C O M P U T E R   H A N D L E S   E R R O R S   --End
#


#branchname
PUSH_CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD);

# stop if only one commit from you
test_project_part=$(projectparticipation)
if [[ "${test_project_part}" == *" 1 ${GIT_USER_NAME}"* ]] ; then
{
  echo -e "${BRIGHT_BLUE87} Are you sure? It appears there is a ${RED} 1 commit ${BRIGHT_BLUE87} for${RED}${BRIGHT_BLUE87} ${GIT_USER_NAME}  ${YELLOW226}!!!  ${RESET}"
  echo -e "${BRIGHT_BLUE87}  ${RED} I am stoppping you before you contaminate this with another user.  ${YELLOW226} You can run 'undocommit' though !!!  ${RESET}"
  exit 69;
}
fi

# rebase
if [[ "${*}" == *"--continue"* ]] ; then
{
  echo -e "${YELLOW214}"
  echo "git rebase --continue"
  echo -e "\033[38;5;28m === rebasing ${RED}Please Close COMMIT_MSG EDITORS in case it opens editor: ${RED}\"${YELLOW214} ${EDITORS}${RED}\" \033[38;5;28m window ${CURBRANCH}  \033[38;5;28m === \033[38;5;214m"
}
fi
REBASE_RESULTS="$(git rebase "$@" 2>&1)" # Check and catch capture all stout sdout output, error will return none 0 to $?)
echo -e ""

if [[ "${*}" == *"--continue"* ]] && [[ "${REBASE_RESULTS}" == *": needs merge"* ]]  ; then
{
  ANY_CONFLICTS="$(conflicts  2>&1 | grep 'm<<<<<< HEAD'  2>&1 | tail -1  2>&1 | cut -d: -f1  2>&1)" # Check and catch capture all stout sdout output, error will return none 0 to $?)
  if [[ -n "${ANY_CONFLICTS}" ]] && [[ -e "${ANY_CONFLICTS}" ]] ; then
  {
    echo -e "${YELLOW226}${REBASE_RESULTS}${YELLOW214}"
    exit 1
  }
  else
  {
    EDITOR_LOCAL="$(git config --local core.editor)"
    EDITOR_GLOBAL="$(git config --global core.editor)"
    EDITORS="${EDITOR} ${EDITOR_LOCAL} ${EDITOR_GLOBAL} "
    echo -e "${YELLOW214}"

    echo "git add ."
    git add .
    echo "git rebase --continue"
    echo -e "\033[38;5;28m === committing pending ${RED}Please Close COMMIT_MSG EDITORS editor: ${RED}\"${YELLOW214} ${EDITORS}${RED}\" \033[38;5;28m window ${CURBRANCH}  \033[38;5;28m === \033[38;5;214m"
    REBASE_RESULTS="$(git rebase --continue 2>&1)" # Check and catch capture all stout sdout output, error will return none 0 to $?)
  }
  fi
}
fi
if [[ "${*}" == *"--continue"* ]] && [[ "${REBASE_RESULTS}" == *"conflicts"* ]]  ; then
{
  REBASE_CONFLICTS="$(conflicts 2>&1 | grep 'm<<<<<< HEAD' 2>&1 | cut -d\0 -f1 )"
  echo -e "\033[38;5;21m === git process responded \033[38;5;21m === \033[38;5;214m"
  echo -e "${RED}${REBASE_RESULTS}${YELLOW214}${RESET}"
  echo -e "\033[38;5;21m === ${YELLOW226} conflicts located \033[38;5;21m === \033[38;5;214m"
  echo -e "${RED}${REBASE_CONFLICTS}${YELLOW214}${RESET}"
  exit 1
}
else
{
  echo -e "${RESET}${REBASE_RESULTS}${RESET}"
}
fi


