#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
#
# set working directory as the scripts location during the execution of script
# cd "$(dirname "$0")"


# if everything else --

# check operation systems
(
  if [[ "$(uname)" == "Darwin" ]] || [[ "$(cut -c1-5 <<< "$(uname -s)")" == "Linux" ]] ; then
  {
    # Do something under Mac OS X platform

    # if file exists in this repo
    if [ -f "commit_exception.list" ] ; then
    {
      EXCEPTION_LIST="$(<commit_exception.list)"
    }
    else
    {
      EXCEPTION_LIST=""
    }
    fi
    while read -r UNSTAGE_THIS_FILE; do
    {
      # if not empty
      [ -z ${UNSTAGE_THIS_FILE} ] && continue
      # if file exists in this repo
      [[ ! -f "${UNSTAGE_THIS_FILE}" ]] && continue
      # Unstage file REF: http://stackoverflow.com/questions/19730565/how-to-remove-files-from-git-staging-area
      #echo -e "\\033[38;5;123m Unstage file: ${UNSTAGE_THIS_FILE}"
      git reset HEAD -- "${UNSTAGE_THIS_FILE}" > /dev/null 2>&1
      git restore --staged "${UNSTAGE_THIS_FILE}" > /dev/null 2>&1
    }
    done <<< "${EXCEPTION_LIST}"
  }
  elif [[ "$(cut -c1-10 <<< "$(uname -s)")" == "MINGW32_NT" ]] ; then
  {
    # Do something under Windows NT platform
    echo "PENDING WINDOWS IMPLEMENTATION";
    # nothing here
  }
  fi
)
