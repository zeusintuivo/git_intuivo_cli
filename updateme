#!/usr/bin/env bash
#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
[[ -z "${FOUND_DIR_JOURNAL}" ]] && . journal_find_journal_dir # gets FOUND_DIR_JOURNAL
[[ -z "${green50}" ]]          && . $FOUND_DIR_JOURNAL/journal_get_bash_colors     # gets cyan blue23 blue30 blue33 green green50 red yellow220 yellow214 gray238 gray242 orange209 orange208 white15 reset
[[ -z "${JOURNAL_HOME}" ]]     && . $FOUND_DIR_JOURNAL/journal_get_journal_config  # gets JOURNAL_HOME   CURRENTDATE   CURRENT_LONG_DATE
[[ -z "${TARGETBASEBRANCH}" ]] && . $FOUND_DIR_JOURNAL/journal_get_target_branch   # gets TARGETBASEBRANCH
[[ -z "${CURBRANCH}" ]]        && . $FOUND_DIR_JOURNAL/journal_get_current_branch  # gets CURBRANCH CURRENTDATE


# read arguments from stdin, command line
if [[ -z "${1}" ]]  ; then
{
	COMMIT_MESSAGE="Updating branch ${CURBRANCH} from ${TARGETBASEBRANCH} branch. Adding and commiting beforehand."
}
else
{
	COMMIT_MESSAGE="${@}"
}
fi

commit "${COMMIT_MESSAGE}"
pull
push


#BRANCH FROM ..master or develop or etc
echo -e ""
echo -e "\033[38;5;27m === Switch Branch to $TARGETBASEBRANCH  === \033[38;5;214m"
echo -e ""
branch "${TARGETBASEBRANCH}"
echo -e ""

#pull
pull

#branch
echo -e ""
echo -e "\033[38;5;27m === Branch back to ${CURBRANCH}  === \033[38;5;214m"
echo -e ""
branch "${CURBRANCH}"
echo ""

#merge
echo -e ""
echo -e "\033[38;5;27m === Merge $TARGETBASEBRANCH into ${CURBRANCH}  === \033[38;5;214m"
echo -e ""
MERGE_RESULTS=$(merge "$TARGETBASEBRANCH" 2>&1) # Check and catch capture all stout sdout output, error will return none 0 to $?)
echo -e ""

if [[ "${MERGE_RESULTS}" == *"conflicts"* ]]  ; then
{
  echo -e "${red}${MERGE_RESULTS}${yellow214}"
  nur "<<<<<"
}
else
{
  echo -e "${reset}${MERGE_RESULTS}"
}
fi


#status
echo -e ""
echo -e "\033[38;5;27m === Status === \033[38;5;214m"
echo -e ""

if command -v gsb >/dev/null 2>&1; then
  gsb
elif command -v status >/dev/null 2>&1; then
  status
else
  git status;
fi

